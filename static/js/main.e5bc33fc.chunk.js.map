{"version":3,"sources":["Input.js","Shift.js","App.js","index.js"],"names":["props","className","Shift","onChange","numOfShifts","options","Array","fill","map","_","num","value","key","defaultProps","ALPHA","ReactDOM","render","useState","text","setText","shiftAmount","setShift","encryptedText","setEncryptedText","encrypt","shift","encrypted","char","shiftLetter","charCode","charCodeAt","test","lower","shiftedCharCode","String","fromCharCode","Input","placeholder","e","target","Number","class","document","getElementById"],"mappings":"uKAEe,G,KAAA,SAAAA,GAAK,OAAI,2CAAWA,EAAX,CAAkBC,UAAU,aCA9CC,EAAQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACjBC,EAAUC,MAAMF,EAAc,GAC/BG,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OACD,4BAAQC,MAAOD,EAAKE,IAAKF,EAAKT,UAAS,wBAAmBS,IACrDA,MAIb,OACI,4BAAQP,SAAUA,EAAUF,UAAU,SAClC,4BAAQU,MAAO,GAAf,mCACCN,IAKbH,EAAMW,aAAe,CACjBT,YAAa,IAGFF,QCjBTY,EAAQ,WCDdC,IAASC,OAAO,mBDGD,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEeF,mBAAS,GAFxB,mBAEVG,EAFU,KAEGC,EAFH,OAGyBJ,mBAASC,GAHlC,mBAGVI,EAHU,KAGKC,EAHL,KAKXC,EAAU,SAACb,EAAOc,GACpB,IAAIC,EAAY,GADc,uBAE9B,YAAiBf,EAAjB,+CAAwB,CAAC,IAAhBgB,EAAe,QACpBD,GAAaE,EAAYD,EAAMF,IAHL,kFAK9B,OAAOC,GAGLE,EAAc,SAACD,EAAMF,GACvB,IAAMI,EAAWF,EAAKG,WAAW,GACjC,GAAIhB,EAAMiB,KAAKJ,GAAO,CAClB,IAAIK,EACAH,GAAY,IAAMA,GAAY,KAAIG,EAAQ,IAC1CH,GAAY,IAAMA,GAAY,MAAKG,EAAQ,IAE/C,IAAMC,GAAoBJ,EAAWG,EAAQP,GAAS,GAAMO,EAC5D,OAAOE,OAAOC,aAAaF,GAE/B,OAAON,GAGX,OACI,0BAAM1B,UAAU,OACZ,4BAAQA,UAAU,eAAlB,iBACA,6BAASA,UAAU,UACf,kBAACmC,EAAD,CACIzB,MAAOO,EACPmB,YAAa,kBACblC,SAAU,SAAAmC,GAAM,IACJ3B,EAAU2B,EAAEC,OAAZ5B,MACRQ,EAAQR,GACRY,EAAiBC,EAAQb,EAAOS,OAGxC,kBAAC,EAAD,CACIjB,SAAU,SAAAmC,GAAM,IACJ3B,EAAU2B,EAAEC,OAAZ5B,MACRU,EAASmB,OAAO7B,IAChBY,EAAiBC,EAAQN,EAAMsB,OAAO7B,QAG9C,wBAAIV,UAAU,iBACV,0BAAMwC,MAAM,kBAAZ,cADJ,IACmD,6BAAO,IACrDnB,OCnDL,MAASoB,SAASC,eAAe,U","file":"static/js/main.e5bc33fc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default props => <input {...props} className='Input' />;\r\n","import React from \"react\";\r\n\r\nconst Shift = ({ onChange, numOfShifts }) => {\r\n    const options = Array(numOfShifts + 1)\r\n        .fill(0)\r\n        .map((_, num) => (\r\n            <option value={num} key={num} className={`Option Option-${num}`}>\r\n                {num}\r\n            </option>\r\n        ));\r\n\r\n    return (\r\n        <select onChange={onChange} className='Shift'>\r\n            <option value={0}>--Please choose a shift value--</option>\r\n            {options}\r\n        </select>\r\n    );\r\n};\r\n\r\nShift.defaultProps = {\r\n    numOfShifts: 25\r\n};\r\n\r\nexport default Shift;\r\n","import React, { useState } from \"react\";\r\nimport \"./Styles.css\";\r\n\r\nimport Input from \"./Input\";\r\nimport Shift from \"./Shift\";\r\n\r\nconst ALPHA = /[a-zA-Z]/;\r\n\r\nexport default () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [shiftAmount, setShift] = useState(0);\r\n    const [encryptedText, setEncryptedText] = useState(text);\r\n\r\n    const encrypt = (value, shift) => {\r\n        let encrypted = \"\";\r\n        for (let char of value) {\r\n            encrypted += shiftLetter(char, shift);\r\n        }\r\n        return encrypted;\r\n    };\r\n\r\n    const shiftLetter = (char, shift) => {\r\n        const charCode = char.charCodeAt(0);\r\n        if (ALPHA.test(char)) {\r\n            let lower;\r\n            if (charCode >= 65 && charCode <= 90) lower = 65;\r\n            if (charCode >= 97 && charCode <= 122) lower = 97;\r\n\r\n            const shiftedCharCode = ((charCode - lower + shift) % 26) + lower;\r\n            return String.fromCharCode(shiftedCharCode);\r\n        }\r\n        return char;\r\n    };\r\n\r\n    return (\r\n        <main className='App'>\r\n            <header className='HeaderTitle'>Caeser Cipher</header>\r\n            <section className='Cipher'>\r\n                <Input\r\n                    value={text}\r\n                    placeholder={\"Enter your text\"}\r\n                    onChange={e => {\r\n                        const { value } = e.target;\r\n                        setText(value);\r\n                        setEncryptedText(encrypt(value, shiftAmount));\r\n                    }}\r\n                />\r\n                <Shift\r\n                    onChange={e => {\r\n                        const { value } = e.target;\r\n                        setShift(Number(value));\r\n                        setEncryptedText(encrypt(text, Number(value)));\r\n                    }}\r\n                />\r\n                <h3 className='EncryptedText'>\r\n                    <span class='EncryptedLabel'>Encrypted:</span> <br />{\" \"}\r\n                    {encryptedText}\r\n                </h3>\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}