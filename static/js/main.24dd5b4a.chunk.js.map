{"version":3,"sources":["Input.js","Shift.js","Cipher.js","BackgroundSvg.js","index.js","App.js"],"names":["props","className","Shift","onChange","numOfShifts","options","Array","fill","map","_","num","value","key","defaultProps","useState","text","setText","shiftAmount","setShift","encryptedText","setEncryptedText","ALPHA","encrypt","shift","encrypted","char","encryptCharacter","charCode","charCodeAt","test","lower","encryptedCharCode","String","fromCharCode","Input","placeholder","e","target","Number","class","xmlns","viewBox","id","offset","stop-color","fill-opacity","d","ReactDOM","render","href","BackgroundSvg","Cipher","document","getElementById"],"mappings":"8KAEe,WAAAA,GAAK,OAAI,2CAAWA,EAAX,CAAkBC,UAAU,YCA9CC,EAAQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACjBC,EAAUC,MAAMF,EAAc,GAC/BG,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OACD,4BAAQC,MAAOD,EAAKE,IAAKF,EAAKT,UAAS,wBAAmBS,IACrDA,MAIb,OACI,4BAAQP,SAAUA,EAAUF,UAAU,SAClC,4BAAQU,MAAO,GAAf,mCACCN,IAKbH,EAAMW,aAAe,CACjBT,YAAa,IAGFF,QCnBA,aAAO,IAAD,EACOY,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEeF,mBAAS,GAFxB,mBAEVG,EAFU,KAEGC,EAFH,OAGyBJ,mBAASC,GAHlC,mBAGVI,EAHU,KAGKC,EAHL,KAIXC,EAAQ,WAERC,EAAU,SAACX,EAAOY,GACpB,IAAIC,EAAY,GADc,uBAE9B,YAAiBb,EAAjB,+CAAwB,CAAC,IAAhBc,EAAe,QACpBD,GAAaE,EAAiBD,EAAMF,IAHV,kFAK9B,OAAOC,GAGLE,EAAmB,SAACD,EAAMF,GAC5B,IAAMI,EAAWF,EAAKG,WAAW,GACjC,GAAIP,EAAMQ,KAAKJ,GAAO,CAClB,IAAIK,EACAH,GAAY,IAAMA,GAAY,KAAIG,EAAQ,IAC1CH,GAAY,IAAMA,GAAY,MAAKG,EAAQ,IAE/C,IAAMC,GAAsBJ,EAAWG,EAAQP,GAAS,GAAMO,EAC9D,OAAOE,OAAOC,aAAaF,GAE/B,OAAON,GAGX,OACI,6BAASxB,UAAU,UACf,kBAACiC,EAAD,CACIvB,MAAOI,EACPoB,YAAa,kBACbhC,SAAU,SAAAiC,GAAM,IACJzB,EAAUyB,EAAEC,OAAZ1B,MACRK,EAAQL,GACRS,EAAiBE,EAAQX,EAAOM,OAGxC,kBAAC,EAAD,CACId,SAAU,SAAAiC,GAAM,IACJzB,EAAUyB,EAAEC,OAAZ1B,MACRO,EAASoB,OAAO3B,IAChBS,EAAiBE,EAAQP,EAAMuB,OAAO3B,QAG9C,wBAAIV,UAAU,iBACV,0BAAMsC,MAAM,kBAAZ,cADJ,IACmD,6BAAO,IACrDpB,KCjDF,oBACX,yBAAKqB,MAAM,6BAA6BC,QAAQ,gBAC5C,8BACI,oCAAgBC,GAAG,cACf,0BAAMC,OAAO,KAAKC,aAAW,YAC7B,0BAAMD,OAAO,OAAOC,aAAW,cAGvC,0BACIrC,KAAK,mBACLsC,eAAa,IACbC,EAAE,oTCRdC,IAASC,OAAO,mBCCD,WACX,OACI,0BAAM/C,UAAU,OACZ,uBACIA,UAAU,UACVgD,KAAK,iDAFT,gBAMA,kBAACC,EAAD,MACA,4BAAQjD,UAAU,eAAlB,iBACA,kBAACkD,EAAD,SDZI,MAASC,SAASC,eAAe,U","file":"static/js/main.24dd5b4a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default props => <input {...props} className='Input' />;\r\n","import React from \"react\";\r\n\r\nconst Shift = ({ onChange, numOfShifts }) => {\r\n    const options = Array(numOfShifts + 1)\r\n        .fill(0)\r\n        .map((_, num) => (\r\n            <option value={num} key={num} className={`Option Option-${num}`}>\r\n                {num}\r\n            </option>\r\n        ));\r\n\r\n    return (\r\n        <select onChange={onChange} className='Shift'>\r\n            <option value={0}>--Please choose a shift value--</option>\r\n            {options}\r\n        </select>\r\n    );\r\n};\r\n\r\nShift.defaultProps = {\r\n    numOfShifts: 25\r\n};\r\n\r\nexport default Shift;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Shift from \"./Shift\";\r\n\r\nexport default () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [shiftAmount, setShift] = useState(0);\r\n    const [encryptedText, setEncryptedText] = useState(text);\r\n    const ALPHA = /[a-zA-Z]/;\r\n\r\n    const encrypt = (value, shift) => {\r\n        let encrypted = \"\";\r\n        for (let char of value) {\r\n            encrypted += encryptCharacter(char, shift);\r\n        }\r\n        return encrypted;\r\n    };\r\n\r\n    const encryptCharacter = (char, shift) => {\r\n        const charCode = char.charCodeAt(0);\r\n        if (ALPHA.test(char)) {\r\n            let lower;\r\n            if (charCode >= 65 && charCode <= 90) lower = 65;\r\n            if (charCode >= 97 && charCode <= 122) lower = 97;\r\n\r\n            const encryptedCharCode = ((charCode - lower + shift) % 26) + lower;\r\n            return String.fromCharCode(encryptedCharCode);\r\n        }\r\n        return char;\r\n    };\r\n\r\n    return (\r\n        <section className='Cipher'>\r\n            <Input\r\n                value={text}\r\n                placeholder={\"Enter your text\"}\r\n                onChange={e => {\r\n                    const { value } = e.target;\r\n                    setText(value);\r\n                    setEncryptedText(encrypt(value, shiftAmount));\r\n                }}\r\n            />\r\n            <Shift\r\n                onChange={e => {\r\n                    const { value } = e.target;\r\n                    setShift(Number(value));\r\n                    setEncryptedText(encrypt(text, Number(value)));\r\n                }}\r\n            />\r\n            <h3 className='EncryptedText'>\r\n                <span class='EncryptedLabel'>Encrypted:</span> <br />{\" \"}\r\n                {encryptedText}\r\n            </h3>\r\n        </section>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'>\r\n        <defs>\r\n            <linearGradient id='myGradient'>\r\n                <stop offset='0%' stop-color='#eb3349' />\r\n                <stop offset='100%' stop-color='#f45c43' />\r\n            </linearGradient>\r\n        </defs>\r\n        <path\r\n            fill='url(#myGradient)'\r\n            fill-opacity='1'\r\n            d='M0,32L40,64C80,96,160,160,240,160C320,160,400,96,480,74.7C560,53,640,75,720,90.7C800,107,880,117,960,133.3C1040,149,1120,171,1200,181.3C1280,192,1360,192,1400,192L1440,192L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z'\r\n        ></path>\r\n    </svg>\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport \"./Styles.css\";\r\n\r\nimport Cipher from \"./Cipher\";\r\nimport BackgroundSvg from \"./BackgroundSvg\";\r\n\r\nexport default () => {\r\n    return (\r\n        <main className='App'>\r\n            <a\r\n                className='gh-link'\r\n                href='https://github.com/carlosdlroca/caeser-cipher'\r\n            >\r\n                Link to Code\r\n            </a>\r\n            <BackgroundSvg />\r\n            <header className='HeaderTitle'>Caeser Cipher</header>\r\n            <Cipher />\r\n        </main>\r\n    );\r\n};\r\n"],"sourceRoot":""}